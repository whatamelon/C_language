20180601 c언어 정리

a+ - 파일의 끝 위치 부터 읽을 수 있음

fclose() - 성공적으로 닫으면  0 반환
	그렇지 않으면 eof 반환

fgets(str, 사이즈, 열기)

char fgetc(file*) 파일에서 읽어온 문자가 저장되는 문자형

fputc(char, FILE*) 파일에 기록할 문자,file 포인터
fgets(char* , int , FILE*); 저장된 배열을 가리키는 포인터 , 크기, FILE포인터
fputs(char*,FILE*); 저장된 배열을 가리키는 포인터, FILE포인터

fread or fwrite(void* 포인터, 바이트 크기, 블록 수, FILE*포인터);
-> 블록의 수를 반환함

fprintf or fscanf(FILE* 포인터, 변환기호, 변수 목록);
-> 변수 목록 = 파일에 저장할 내용을 담고 있는 변수들

순차 접근 - 처음 or 끝 부터 데이터를 입출력하는 방식
임의 접근 - 임의의 위치부터 데이터를 입출력하는 방식 / 지시자를 이용하여 파일에 접근

int*fseek(FILE*fp, long offset, int origin)

FILE 포인터, origin 부터 새로운 위치까지 상대적으로 떨어진 거리, 파일 위치 지지사

성공할 경우 0 반환, 오류가 발생하면 0 이외의 값을 반환

fgetpos(FILE*fp, const fpos_t* pos); FILE포인터, 이동하고자 하는 파일 위치  지시자의 새 위치

성공할 경우 0 반환, 오류가 발생하면 0 이외의 값을 반환



/*
#include <stdio.h>
#include <stdlib.h>

int main(void)
{
	FILE* fp;
	char ch;

	if ((fp = fopen("basic.txt", "w")) == NULL)
	{
		printf("파일이 열리지 않습니다.\n");
		exit(1);
	}

	printf("문자 하나를 입력하세요.\n");
	ch = getchar();

	while (ch != 'q')
	{
		fputc(ch, fp);
		ch = getchar();
	}

	printf("파일 입력이 종료되었습니다.\n");
	return 0;
}
*/
/*
#include <stdio.h>
#include <stdlib.h>
#define LINE 30

int main(void)
{
	FILE*fp1, *fp2;
	char line[LINE];

	fp1 = fopen("lineinput.txt", "r");

	if (fp1 == NULL)
	{
		printf("파일을 열 수 없습니다.\n");
		exit(1);
	}

	fp2 = fopen("linetarget.txt", "w");

	while (fgets(line, LINE, fp1) != NULL)
	fputs(line, fp2);

	fclose(fp1);
	fclose(fp2);

	return 0;
}
*/

/*
#include <stdio.h>
#include <stdlib.h>

struct students {
	char name[40];
	char address[40];
	int age;
};

typedef struct students student;

int main(void)
{
	FILE*fp1;

	student st1 = { "홍길동", "서울", 30 }, st2;

	if ((fp1 = fopen("basic.txt", "w")) == NULL)
	{
		printf("파일을 열 수 없습니다.\n");
		exit(1);
	}

	fprintf(fp1, "%s %s %d\n", st1.name, st1.address, st1.age);
	fclose(fp1);

	if ((fp1 = fopen("basic.txt", "r")) == NULL)
	{
	printf("파일을 열 수 없습니다.\n");
	exit(1);
	}

	fscanf(fp1, "%s %s %d\n", st2.name, st2.address, &st2.age);
	printf("이름 : %s, 거주지 : %s, 나이 : %d\n\n", st2.name, st2.address, st2.age);

	fclose(fp1);
	return 0;
}
*/

/*
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

int main(void)
{
	FILE*fp;
	char str[11];

	if ((fp = fopen("data.txt", "wb")) == NULL)
	{
		printf("파일을 열 수 없습니다.\n");
		exit(1);
	}

	fprintf(fp, "abcdefghij");
	fclose(fp);

	if ((fp = fopen("data.txt", "rb")) == NULL)
	{
		printf("파일을 열 수 없습니다.\n");
		exit(1);
	}

	fgets(str, 11, fp);
	printf("str 문장 출력 : %s\n\n", str);

	fseek(fp, 4L, SEEK_SET);
	fgets(str, 3, fp);
	printf("4번째부터 2글자 출력 : %s\n", str);

	fseek(fp, -3L, SEEK_CUR);
	fgets(str, 3, fp);
	printf("현 위치의 3글자 앞에서부터 2글자 출력 : %s\n", str);

	fseek(fp, -9L, SEEK_END);
	fgets(str, 5, fp);
	printf("맨 뒤에서 9글자 앞에서부터 4글자 출력 : %s\n", str);
	fclose(fp);

	return 0;
}
*/

/*
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

int main(void)
{
	FILE*fp;
	fpos_t pos;
	char str[20];
	if ((fp = fopen("example.c", "rb")) == NULL)
	{
		printf("파일이 열리지 않습니다.\n");
		exit(1);
	}
	fgetpos(fp, &pos);
	printf("pos = %ld\n", (long)pos);

	fread(str, sizeof(char), 20, fp);

	fgetpos(fp, &pos);

	printf("pos = %ld, str = %s\n", (long)pos, str);

	pos = 300;

	if (fsetpos(fp, &pos)!= 0)
		printf("fsetpos 에러 발생 \n");

	fread(str, sizeof(char), 20, fp);
	fgetpos(fp, &pos);

	printf("pos = %ld, str = %.30s\n", (long)pos, str);

	fclose(fp);
	return 0;
}
*/

매크로
값을 상수화 시켜서 문자로 씀

